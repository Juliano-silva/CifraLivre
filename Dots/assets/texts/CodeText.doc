    def Folder_Remove():
        try:
            folder_files_cleaned = set()
            
            if os.path.exists(GlobalImportes.Path_Download):
                for file_name in os.listdir(GlobalImportes.Path_Download):
                    if file_name.lower().endswith(".mp3") and os.path.isfile(os.path.join(GlobalImportes.Path_Download, file_name)):
                        # Limpa o nome do arquivo para comparação com o título do banco de dados
                        cleaned_name = re.sub(r'[\\/*?:"<>|]','', file_name.replace(".mp3", ""))
                        folder_files_cleaned.add(cleaned_name)

            # Obtém todos os títulos de música do banco de dados
            cursor.execute("SELECT title FROM Musicas")
            db_titles = {row[0] for row in cursor.fetchall()}

            # Identifica os títulos no banco de dados que não têm um arquivo correspondente
            titles_to_remove = db_titles - folder_files_cleaned

            removed_count = 0
            for title in titles_to_remove:
                cursor.execute("DELETE FROM Musicas WHERE title = ?", (title,))
                print(f"Registro removido do banco de dados: {title}")
                removed_count += 1

            connection.commit()
            return f"Processo concluído. {removed_count} registros removidos do banco de dados."

        except Exception as e:
            return f"Ocorreu um erro: {e}"